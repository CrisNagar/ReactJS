{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\React\\\\chess\\\\src\\\\App.js\";\n\n/* Framework */\nimport React from 'react';\n/* Libraries */\n\nimport Data from './library/Data';\nimport Movements from './library/Movements';\n/* Style CSS, SASS, LESS */\n\nimport './App.css';\n/* Components */\n\nimport Board from './components/Board';\nimport ScoreBoard from './components/ScoreBoard';\nimport Menu from './components/Menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMoving: false,\n      startPlayer: [\"WHITE\", \"BLACK\"][Math.floor(Math.random() * 2)],\n      nextPlayer: null,\n      emptySquare: \"&nbsp;\",\n      currentSelected: {\n        item: null,\n        position: null\n      },\n      data: new Data(),\n      movements: new Movements()\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      nextPlayer: this.state.startPlayer\n    });\n  }\n\n  updateCurrentSelected(item, position) {\n    /* \n    SI MOVIMIENTO ES TRUE (YA EXISTE UNA FICHA SELECCIONADA QUE SE QUIERE MOVER) \n    OBTENEMOS LA FICHA SELECCIONADA ANTERIORMENTE Y RESTAURAMOS SU OPACIDAD\n    */\n    if (this.state.isMoving) {\n      let el = this.state.currentSelected.item;\n      el.innerHTML = \"\";\n      el.style.opacity = \"1\";\n    } else {\n      /* \n      SI MOVIMIENTO ES FALSE (PRIMER CLICK DEL TURNO)\n      MODIFICAMOS LA OPACIDAD DEL ITEM DE ENTRADA\n      ACTUALIZAMOS EL ESTADO DE SELECCION\n       */\n      item.style.opacity = \"0.4\";\n      this.updateMovementState();\n    }\n\n    this.setState({\n      currentSelected: {\n        item: item,\n        position: position\n      }\n    });\n  }\n\n  updateCurrentPlayer() {\n    this.setState({\n      nextPlayer: this.state.nextPlayer === \"BLACK\" ? \"WHITE\" : \"BLACK\"\n    });\n  }\n\n  updateMovementState() {\n    this.setState({\n      isMoving: !this.state.isMoving\n    });\n  }\n\n  handleClick(el) {\n    /* \n    SI NO ESTA MOVIENDOSE (COMIENZO DEL TURNO)\n    &&\n    SE HA PULSADO UNA CASILLA CON UNA FICHA\n    &&\n    EL JUGADOR DE LA FICHA PULSADA ES EL MISMO DEL TURNO\n    */\n    if (!this.state.isMoving && el.currentTarget.firstElementChild && el.currentTarget.firstElementChild.dataset.player === this.state.nextPlayer) {\n      this.updateCurrentSelected(el.currentTarget, el.currentTarget.dataset.position);\n    } else if (this.state.isMoving) {\n      /* \n      SI ESTA MOVIENDOSE (YA SE HA PULADO UNA FICHA AL MENOS UNA VEZ)\n      */\n      if (el.currentTarget === this.state.currentSelected.item) return; //SI SE PULSA DOS VECES LA MISMA CASILLA NO HACEMOS NADA \n\n      /* \n      COMPROBAMOS QUE EL MOVIMIENTO QUE SE INTENTA ES VALIDO\n      PARAMETROS:\n      -JUGADOR ACTUAL\n      -TIPO DE FICHA\n      -CASILLA INICIAL\n      -CASILLA FINAL\n      */\n\n      if (this.state.movements.checkMovement(this.state.nextPlayer, this.state.currentSelected.item.firstElementChild.dataset.piece, this.state.currentSelected.item.dataset.position, el.currentTarget.dataset.position)) {\n        el.currentTarget.innerHTML = this.state.currentSelected.item.innerHTML;\n        this.updateCurrentSelected(el.currentTarget, null);\n        this.updateMovementState();\n        this.updateCurrentPlayer();\n      } else {\n        alert(\"Movimiento no permitido\");\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-lg-10\",\n            children: /*#__PURE__*/_jsxDEV(Board, {\n              pieces: this.state.data[\"PIECES\"],\n              positions: this.state.data[\"POSITIONS\"],\n              nextPlayer: this.state.nextPlayer,\n              onClick: el => this.handleClick(el)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-lg-2 order-1 order-lg-2\",\n            children: /*#__PURE__*/_jsxDEV(ScoreBoard, {\n              nextPlayer: this.state.nextPlayer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/React/chess/src/App.js"],"names":["React","Data","Movements","Board","ScoreBoard","Menu","App","Component","constructor","props","state","isMoving","startPlayer","Math","floor","random","nextPlayer","emptySquare","currentSelected","item","position","data","movements","componentDidMount","setState","updateCurrentSelected","el","innerHTML","style","opacity","updateMovementState","updateCurrentPlayer","handleClick","currentTarget","firstElementChild","dataset","player","checkMovement","piece","alert","render"],"mappings":"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","sourcesContent":["/* Framework */\nimport React from 'react';\n\n/* Libraries */\nimport Data from './library/Data'\nimport Movements from './library/Movements';\n\n/* Style CSS, SASS, LESS */\nimport './App.css';\n\n/* Components */\nimport Board from './components/Board';\nimport ScoreBoard from './components/ScoreBoard';\nimport Menu from './components/Menu';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMoving: false,\n      startPlayer: [\"WHITE\", \"BLACK\"][Math.floor(Math.random() * 2)],\n      nextPlayer: null,\n      emptySquare: \"&nbsp;\",\n      currentSelected: {\n        item: null,\n        position: null\n      },\n      data: new Data(),\n      movements: new Movements()\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      nextPlayer: this.state.startPlayer,\n    })\n  }\n\n  updateCurrentSelected(item, position) {\n    /* \n    SI MOVIMIENTO ES TRUE (YA EXISTE UNA FICHA SELECCIONADA QUE SE QUIERE MOVER) \n    OBTENEMOS LA FICHA SELECCIONADA ANTERIORMENTE Y RESTAURAMOS SU OPACIDAD\n    */\n    if (this.state.isMoving) {\n      let el = this.state.currentSelected.item\n      el.innerHTML = \"\"\n      el.style.opacity = \"1\"\n    } else {\n      /* \n      SI MOVIMIENTO ES FALSE (PRIMER CLICK DEL TURNO)\n      MODIFICAMOS LA OPACIDAD DEL ITEM DE ENTRADA\n      ACTUALIZAMOS EL ESTADO DE SELECCION\n       */\n      item.style.opacity = \"0.4\"\n      this.updateMovementState()\n    }\n\n    this.setState({\n      currentSelected: {\n        item: item,\n        position: position\n      }\n    })\n  }\n\n  updateCurrentPlayer() {\n    this.setState({\n      nextPlayer: this.state.nextPlayer === \"BLACK\" ? \"WHITE\" : \"BLACK\"\n    })\n  }\n\n  updateMovementState() {\n    this.setState({\n      isMoving: !this.state.isMoving\n    })\n  }\n\n  handleClick(el) {\n    /* \n    SI NO ESTA MOVIENDOSE (COMIENZO DEL TURNO)\n    &&\n    SE HA PULSADO UNA CASILLA CON UNA FICHA\n    &&\n    EL JUGADOR DE LA FICHA PULSADA ES EL MISMO DEL TURNO\n    */\n    if (!this.state.isMoving && el.currentTarget.firstElementChild && el.currentTarget.firstElementChild.dataset.player === this.state.nextPlayer) {\n      this.updateCurrentSelected(el.currentTarget, el.currentTarget.dataset.position)\n    } else if (this.state.isMoving) {\n      /* \n      SI ESTA MOVIENDOSE (YA SE HA PULADO UNA FICHA AL MENOS UNA VEZ)\n      */\n\n      if (el.currentTarget === this.state.currentSelected.item) return //SI SE PULSA DOS VECES LA MISMA CASILLA NO HACEMOS NADA \n\n      /* \n      COMPROBAMOS QUE EL MOVIMIENTO QUE SE INTENTA ES VALIDO\n      PARAMETROS:\n      -JUGADOR ACTUAL\n      -TIPO DE FICHA\n      -CASILLA INICIAL\n      -CASILLA FINAL\n      */\n      if (this.state.movements.checkMovement(this.state.nextPlayer, this.state.currentSelected.item.firstElementChild.dataset.piece, this.state.currentSelected.item.dataset.position, el.currentTarget.dataset.position)) {\n        el.currentTarget.innerHTML = this.state.currentSelected.item.innerHTML\n\n        this.updateCurrentSelected(el.currentTarget, null)\n        this.updateMovementState()\n        this.updateCurrentPlayer()\n      } else {\n        alert(\"Movimiento no permitido\")\n      }\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Menu />\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12 col-lg-10\">\n              <Board pieces={this.state.data[\"PIECES\"]} positions={this.state.data[\"POSITIONS\"]} nextPlayer={this.state.nextPlayer} onClick={(el) => this.handleClick(el)} />\n            </div>\n\n            <div className=\"col-12 col-lg-2 order-1 order-lg-2\">\n              <ScoreBoard nextPlayer={this.state.nextPlayer} />\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}